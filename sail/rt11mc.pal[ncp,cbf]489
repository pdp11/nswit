rt11fg === 1			;indicate an assembly for RT-11
				;if not defined, then we are version 3 RT-11
.iif ndf rt11vn, rt11vn===3

.macro .mcall
.endm

.MACRO ..V1..
.MCALL	...CM0,...CM1,...CM2,...CM3,...CM4,...CM5,...CM6
...V1==1
.ENDM
.MACRO ..V2..
.MCALL	...CM0,...CM1,...CM2,...CM3,...CM4,...CM5,...CM6
...V1==2.
.ENDM
.MACRO .MACS
.MCALL	...CM0,...CM1,...CM2,...CM3,...CM4,...CM5,...CM6
...v2===0
...V1==3.
.ENDM
.MACRO ...CM0 STARG
.IF B <STARG>
	CLR	-(6.)
.IFF
.IF IDN <STARG>,#0
	CLR	-(6.)
.IFF
	MOV	STARG,-(6.)
.ENDC
.ENDC
.ENDM
.MACRO ...CM1	AREA,IC,CHAN,FLAG
...CM5	<AREA>
...V2==0
.IF B <FLAG>
.IIF B <AREA>, ...V2==1
.IFF
.IIF DIF <FLAG>,SET, ...V2==1
.ENDC
.IF NE ...V2
.IF IDN <CHAN>,<#0>
	CLRB	(0)
.IFF
.IF NB <CHAN>
	MOVB	CHAN,(0)
.ENDC
.ENDC
.IFF
.IF B <CHAN>
	MOVB	#IC,1(0)
.IFF
.NTYPE ...V2,CHAN
.IF EQ ...V2-27
	MOV	CHAN+<IC*400>,(0)
.IFF
	MOV	#IC*400,(0)
	MOVB	CHAN,(0)
.ENDC
.ENDC
.ENDC
.ENDM
.MACRO ...CM2	ARG,OFFSE,INS,CSET,BB
.IF B <ARG>
.IF NB <CSET>
.IF NE ...V1-3.
	CLR'BB	OFFSE(0)
.ENDC
.ENDC
.IFF
.IF IDN	<ARG>,#0
	CLR'BB	OFFSE(0)
.IFF
	MOV'BB	ARG,OFFSE(0)
.ENDC
.ENDC
.IF NB <INS>
	EMT	375
.ENDC
.ENDM
.MACRO ...CM3	CHAN,IC
.IF B <CHAN>
	MOV	#IC*400,%0
.IFF
.NTYPE ...V2,CHAN
.IF EQ ...V2-27
	MOV	CHAN+<IC*400>,%0
.IFF
	MOV	#IC*400,%0
	BISB	CHAN,%0
.ENDC
.ENDC
	EMT	374
.ENDM
.MACRO ...CM4	AREA,CHAN,BUF,WCNT,BLK,CRTN,IC,CODE
...CM1 <AREA>,<IC>,<CHAN>,<CODE>
...CM2 <BLK>,2.
...CM2 <BUF>,4.
...CM2 <WCNT>,6.
...CM2 <CRTN>,8.,X
.ENDM
.MACRO ...CM5	SRC,BB
.IF NB <SRC>
.IF DIF <SRC>,R0
	MOV'BB	SRC,%0
.ENDC
.ENDC
.ENDM
.MACRO ...CM6	AREA,IC,CHAN,FLAG
...CM5	<AREA>
.IF B <FLAG>
.IF NB <AREA>
	MOV	#IC*400+CHAN,(0)
.ENDC
.IFF
.IF IDN <FLAG>,SET
	MOV	#IC*400+CHAN,(0)
.ENDC
.ENDC
.ENDM
.MACRO .CDFN	AREA,ADDR,NUM,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,13.,0,<CODE>
...CM2	<ADDR>,2.
...CM2	<NUM>,4.,X
.ENDM
.MACRO .CHAIN
	MOV	#8.*400,%0
	EMT	374
.ENDM
.MACRO .CHCOP	AREA,CHAN,OCHAN,JOBBLK,CODE				;JH15
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM1	<AREA>,11.,<CHAN>,<CODE>
...CM2	<OCHAN>,2.							;JH15+
.IF NB  <JOBBLK>
...CM2	<JOBBLK>,4.,X
.IFF
...CM2	#0,4.,X
.ENDC ;NB <JOBBLK>							;JH15-
.ENDM
.MACRO .CLOSE	CHAN
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
	EMT	<160+CHAN>
.IFF
...CM3 <CHAN>,6.
.ENDC
.ENDM
.MACRO .CNTXS	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,27.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .CMKT	AREA,ID,TIME,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,19.,0,<CODE>
...CM2	<ID>,2.
...CM2	<TIME>,4.,X,X
.ENDM
.MACRO .CRAW	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,2.,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .CRRG	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .CSIGE	DEVSPC,DEFEXT,CSTRNG,LINBUF
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF NB <LINBUF>
...CM0	<LINBUF>
.NTYPE	...V2,DEVSPC
.IF EQ ...V2-27
...CM0	<DEVSPC'+1>
.IFF
...CM0	<DEVSPC>
	INC	(6.)
.ENDC
.IFF
...CM0	<DEVSPC>
.ENDC
...CM0	<DEFEXT>
...CM0	<CSTRNG>
	EMT	344
.ENDM
.MACRO .CSISP	OUTSPC,DEFEXT,CSTRNG,LINBUF
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF NB <LINBUF>
...CM0	<LINBUF>
.NTYPE	...V2,OUTSPC
.IF EQ ...V2-27
...CM0	<OUTSPC'+1>
.IFF
...CM0	<OUTSPC>
	INC	(6.)
.ENDC
.IFF
...CM0	<OUTSPC>
.ENDC
...CM0	<DEFEXT>
...CM0	<CSTRNG>
	EMT	345
.ENDM
.MACRO .CSTAT	AREA,CHAN,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM1	<AREA>,23.,<CHAN>,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .CTIMI	TBK
	JSR	%5,@$TIMIT
	.WORD	TBK-.
	.WORD	1
.ENDM
.MACRO .DATE
	MOV	#10.*400,%0
	EMT	374
.ENDM
.MACRO .DELET	AREA,CHAN,DBLK,SEQNUM,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
	EMT	<AREA>
.IFF
...CM5	<AREA>
.IF IDN <CHAN>,#0
	CLR	(0)
.IFF
...V2==0
.IF B <CODE>
.IIF B <AREA>, ...V2==1
.IFF
.IIF DIF <CODE>,SET, ...V2==1
.ENDC
.IF NE ...V2
.IF NB <CHAN>
	MOVB	CHAN,(0)
.ENDC
.IFF
.IF B <CHAN>
	CLRB	1(0)
.IFF
.NTYPE ...V2,CHAN
.IF EQ ...V2-27
	MOV	CHAN,(0)
.IFF
	CLR	(0)
	MOVB	CHAN,(0)
.ENDC
.ENDC
.ENDC
.ENDC
...CM2	<DBLK>,2.
...CM2	<SEQNUM>,4.,X,X
.ENDC
.ENDM
.MACRO .DEVIC	AREA,ADDR,LINK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF B LINK
...CM6	<AREA>,12.,0,<CODE>
.IFF
...CM6	<AREA>,12.,1,<CODE>
.ENDC
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .DRAST	NAME,PRI,ABT
.GLOBL	$INPTR
.IF B <ABT>
	RTS	%7
.IFF
	BR	ABT
.ENDC
NAME'INT:: JSR	%5,@$INPTR
	.WORD	^C<PRI*40>&340
.ENDM
.MACRO .DRBEG	NAME,VEC,DSIZ,DSTS,VTBL
.ASECT
. == 52
.GLOBL	NAME'END,NAME'INT
	.WORD	<NAME'END-NAME'STRT>
.IF B	<DSIZ>
	.WORD	NAME'DSIZE
.IFF
	.WORD	DSIZ
.ENDC
.IF B	<DSTS>
	.WORD	NAME'STS
.IFF
	.WORD	DSTS
.ENDC
	.WORD	ERL$G+<MMG$T*2>+<TIM$IT*4>
. == 176
.IIF DF NAME'$CSR, .WORD	NAME'$CSR
.PSECT	NAME'DVR
NAME'STRT::
.IF NB	VTBL
.GLOBL	VTBL
	.WORD	<VTBL-.>/2. -1 + 100000
.IFF
.IF NB	<VEC>
.IIF NE	VEC&3	.ERROR	VEC	;ODD OR ILLEGAL VECTOR SPECIFIED
	.WORD	VEC&^C3
.IFF
.IF DF	NAME'$VTB
.GLOBL	NAME'$VTB
	.WORD	<NAME'$VTB-.>/2. -1 + 100000
.IFF
.IIF NE	NAME'$VEC&3	.ERROR	NAME'$VEC ;ODD OR ILLEGAL VECTOR SPECIFIED
	.WORD	NAME'$VEC&^C3
.ENDC
.ENDC
.ENDC
	.WORD	NAME'INT-.,340
NAME'SYS::
NAME'LQE::	.WORD	0
NAME'CQE::	.WORD	0
.ENDM
.MACRO .DRBOT	NAME,ENTRY,READ
	.DREND	NAME
.IIF NDF TPS, TPS==177564
.IIF NDF TPB, TPB==177566
LF==12
CR==15
B$BOOT==1000
B$DEVN==4716
B$DEVU==4722
B$READ==4730
.IF EQ	MMG$T
B$DNAM==^R'NAME
.IFF
B$DNAM==^R'NAME'X
.ENDC
.ASECT
.==62
	.WORD	NAME'BOOT,NAME'BEND-NAME'BOOT,READ-NAME'BOOT
.PSECT	NAME'BOOT
NAME'BOOT::NOP
	BR	ENTRY
.ENDM
.MACRO .DRDEF	NAME,CODE,STAT,SIZE,CSR,VEC
.MCALL	.DRAST,.DRBEG,.DRBOT,.DREND,.DRFIN,.DRSET,.DRVTB,.FORK,.QELDF
.IIF NDF TIM$IT, TIM$IT==0
.IIF NE TIM$IT, TIM$IT==1
.IIF NDF MMG$T, MMG$T==0
.IIF NE MMG$T, MMG$T==1
.IIF NDF ERL$G, ERL$G==0
.IIF NE ERL$G, ERL$G==1
.IIF NE TIM$IT, .MCALL	.TIMIO,.CTIMI
.QELDF
HDERR$==1
EOF$==20000
SPFUN$==2000
HNDLR$==4000
SPECL$==10000
WONLY$==20000
RONLY$==40000
FILST$==100000
NAME'DSIZ==SIZE
NAME'$COD==CODE
NAME'STS==<CODE>!<STAT>
.IIF NDF NAME'$CSR, NAME'$CSR==CSR
.IIF NDF NAME'$VEC, NAME'$VEC==VEC
.GLOBL	NAME'$CSR,NAME'$VEC
.ENDM
.MACRO .DREND	NAME
.PSECT	NAME'DVR
.IIF NDF NAME'$END, NAME'$END:
.IF EQ	.-NAME'$END
NAME'$END::
.IF NE MMG$T
$RLPTR:: .WORD	0
$MPPTR:: .WORD	0
$GTBYT:: .WORD	0
$PTBYT:: .WORD	0
$PTWRD:: .WORD	0
.ENDC
.IF NE ERL$G
$ELPTR:: .WORD	0
.ENDC
.IF NE TIM$IT
$TIMIT:: .WORD	0
.ENDC
$INPTR:: .WORD	0
$FKPTR:: .WORD	0
.GLOBL	NAME'STRT
NAME'END == .
.IFF
.PSECT	NAME'BOOT

.IIF LT	<NAME'BOOT-.+664>, .ERROR	;PRIMARY BOOT TOO LARGE

.	== NAME'BOOT+664
BIOERR:	JSR	R1,REPORT
	 .WORD	IOERR-NAME'BOOT

REPORT:	MOV	#BOOTF-NAME'BOOT,R0
	JSR	R1,REP
	MOV	(R1)+,R0
	JSR	R1,REP
	MOV	#CRLFLF-NAME'BOOT,R0
	JSR	R1,REP
	RESET
	HALT
	BR	.-2

REPOR:	MOVB	(R0)+,@#TPB
REP:	TSTB	@#TPS
	BPL	REP
	TSTB	@R0
	BNE	REPOR
	RTS	R1

BOOTF:	.ASCIZ	<CR><LF>"?BOOT-U-"<200>
CRLFLF:	.ASCIZ	<CR><LF><LF>
IOERR:	.ASCIZ	"I/O error"
	.EVEN
NAME'BEND::
.ENDC
.ENDM
.MACRO .DRFIN	NAME
.GLOBL	NAME'CQE
	MOV	%7,%4
	ADD	#NAME'CQE-.,%4
	MOV	@#54,%5
	JMP	@270(5)
.ENDM
.MACRO .DRSET	OPTION,VAL,RTN,MODE
.ASECT
.IF LT	.-400
.==400
.IFF
.==.-2
.ENDC
	VAL
...V2==.
	.RAD50	\OPTION\
.==...V2+4
	.BYTE	<RTN-400>/2
...V2==0
.IRP X,<MODE>
.IF IDN <X>,<NUM>
...V2==...V2!100
.IFF
.IF IDN <X>,<NO>
...V2==...V2!200
.IFF
.IF IDN <X>,<OCT>
...V2==...V2!140
.IFF
.ERROR	;ILLEGAL PARAMETER X
.ENDC
.ENDC
.ENDC
.ENDR
	.BYTE	...V2
	.WORD	0
.ENDM
;.;
.MACRO .DRVTB	NAME,VEC,INT,PS
.iff b,ps,...ps==0
.iff nb,ps,...ps==0

.IF NB	NAME
NAME'$VTB::
.IFF
.==.-2
.ENDC
	.WORD	VEC&^C3,INT-.,340!...PS,0
.ENDM
.MACRO .DSTAT	RETSPC,DNAM
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM5	<DNAM>
...CM0	<RETSPC>
	EMT	342
.ENDM
.MACRO .ELAW	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,3.,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .ELRG	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,1,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .ENTER	AREA,CHAN,DBLK,LEN,SEQNUM,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
...CM0	<DBLK>
	EMT	<40+AREA>
.IFF
...CM1	<AREA>,2.,<CHAN>,<CODE>
...CM2	<DBLK>,2.
...CM2	<LEN>,4.,,X
...CM2	<SEQNUM>,6.,X,X
.ENDC
.ENDM
.MACRO .EXIT
	EMT	350
.ENDM
.MACRO .FETCH	ADDR,DNAM
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM5	<DNAM>
...CM0	<ADDR>
	EMT	343
.ENDM
.MACRO .FORK	FKBLK
	JSR	%5,@$FKPTR
	.WORD	FKBLK - .
.ENDM
.MACRO .GMCX	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,6.,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .GTIM	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,17.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .GTJB	AREA,ADDR,JOBBLK,CODE					;JH15
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,16.,1,<CODE>
...CM2	<ADDR>,2.							;JH15+
.IF NB  <JOBBLK>
.IF IDN <JOBBLK>,<ME>
...CM2	#-1,4.,X
.IFF
...CM2	<JOBBLK>,4.,X
.ENDC ;IDN <JOBBLK>,<ME>
.IFF
...CM2	#-3,4.,X
.ENDC ;NB <JOBBLK>							;JH15-
.ENDM
.MACRO .GTLIN	LINBUF,PROMPT
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM0	<LINBUF>
...CM0	#1
...CM0	<PROMPT>
	CLR	-(6.)
	EMT	345
.ENDM
.MACRO .GVAL	AREA,OFFSE,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,28.,0,<CODE>
...CM2	<OFFSE>,2.,X
.ENDM
.MACRO .HERR
	MOV	#5.*400,%0
	EMT	374
.ENDM
.MACRO .HRESE
	EMT	357
.ENDM
.MACRO .INTEN	PRIO,PIC
.IF B PIC
	JSR	5.,@54
.IFF
	MOV	@#54,-(6.)
	JSR	5.,@(6.)+
.ENDC
	.WORD	^C<PRIO*32.>&224.
.ENDM
.MACRO .LOCK
	EMT	346
.ENDM
.MACRO .LOOKU	AREA,CHAN,DBLK,SEQNUM,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
	EMT	<20+AREA>
.IFF
...CM1	<AREA>,1,<CHAN>,<CODE>
...CM2	<DBLK>,2.
...CM2	<SEQNUM>,4.,X,X
.ENDC
.ENDM
.MACRO .MAP	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,4.,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .MTATC	AREA,ADDR,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,31.,5.,<CODE>
...CM2	<ADDR>,2.
...CM2	<UNIT>,4.,X,,B
.ENDM
.MACRO .MTDTC	AREA,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,31.,6.,<CODE>
...CM2	<UNIT>,4.,X,,B							;002
.ENDM									;**-1
.MACRO .MTPRN	AREA,ADDR,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,7.,<CODE>
...CM2	ADDR,2.
...CM2	<UNIT>,4.,X,,B
.ENDM
.MACRO .MFPS	ADDR
	MOV	@#54,-(6.)
	ADD	#362,(6.)
	JSR	7.,@(6.)+
.IIF NB	<ADDR>	MOVB	(6.)+,ADDR
.ENDM
.MACRO .MTRCT	AREA,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,31.,4.,<CODE>
...CM2	<UNIT>,4.,X,,B							;002
.ENDM									;**-1
.MACRO .MRKT	AREA,TIME,CRTN,ID,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,18.,0,<CODE>
...CM2	<TIME>,2.
...CM2	<CRTN>,4.
...CM2	<ID>,6.,X
.ENDM
.MACRO .MTGET	AREA,ADDR,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,1,<CODE>
...CM2	ADDR,2.
...CM2	<UNIT>,4.,X,,B
.ENDM
.MACRO .MTPS	ADDR
.IIF NB	<ADDR>	CLR	-(6.)
.IIF NB	<ADDR>	MOVB	ADDR,(6.)
	MOV	@#54,-(6.)
	ADD	#360,(6.)
	JSR	7.,@(6.)+
.ENDM
.MACRO .MTSET	AREA,ADDR,UNIT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,0,<CODE>
...CM2	ADDR,2.
...CM2	<UNIT>,4.,X,,B
.ENDM
.MACRO .MTIN	AREA,ADDR,UNIT,CHRCNT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,2.,<CODE>
...CM2	ADDR,2.
...CM2	<UNIT>,4.,,,B
...CM2	<CHRCNT>,5.,X,,B
.ENDM
.MACRO .MTOUT	AREA,ADDR,UNIT,CHRCNT,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,3.,<CODE>
...CM2	ADDR,2.
...CM2	<UNIT>,4.,,,B
...CM2	<CHRCNT>,5.,X,,B
.ENDM
.MACRO .MTSTA	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	AREA,31.,8.,<CODE>
...CM2	ADDR,2.
...CM2	#0,4.,X
.ENDM
.MACRO .MWAIT
	MOV	#9.*400,%0
	EMT	374
.ENDM
.MACRO .PRTX	ADDR
.IF NB <ADDR>
.IF DIF <ADDR>,R0
	MOV	ADDR,%0
.ENDC
.ENDC
	EMT	351
.ENDM
.MACRO .PROTE	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,25.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .PURGE	CHAN
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM3	<CHAN>,3.
.ENDM
.MACRO .QELDF
Q.LINK==0
Q.CSW==2.
Q.BLKN==4.
Q.FUNC==6.
Q.JNUM==7.
Q.UNIT==7.
Q.BUFF==10
Q.WCNT==12
Q.COMP==14
.IRP	X,<LINK,CSW,BLKN,FUNC,JNUM,UNIT,BUFF,WCNT,COMP>
Q$'X==Q.'X-4
.ENDR
.IF EQ MMG$T
Q.ELGH==16
.IFF
Q.PAR==16
Q$PAR==12
Q.ELGH==24
.ENDC
.ENDM
.MACRO .QSET	ADDR,LEN
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM5	<LEN>								;001
...CM0	<ADDR>
	EMT	353
.ENDM
.MACRO .RCTRL
	EMT	355
.ENDM
;.;.MACRO .RCVD	AREA,BUF,WCNT,CRTN==#1,CODE
;.IF NDF ...V1
;.MCALL .MACS
;.MACS
;.ENDC
;.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
;.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
;.ENDM
.MACRO .RCVDC	AREA,BUF,WCNT,CRTN,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
.ENDM
;.;.MACRO .RCVDW	AREA,BUF,WCNT,CRTN==#0,CODE
;.IF NDF ...V1
;.MCALL .MACS
;.MACS
;.ENDC
;.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
;.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,22.,<CODE>
;.ENDM
.MACRO .RDBBK	RGSIZ
.MCALL	.RDBDF
.RDBDF
	.WORD
	.WORD	RGSIZ
	.WORD
.ENDM
.MACRO .RDBDF
R.GID	==0
R.GSIZ	==2.
R.GSTS	==4.
R.GLGH	==6.
RS.CRR	==100000
RS.UNM	==40000
RS.NAL	==20000
.ENDM
;.;
.MACRO .READ	AREA,CHAN,BUF,WCNT,BLK,CRTN==#1,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<WCNT>
...CM0	#1
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<200+AREA>
.IFF
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,8.,<CODE>
.ENDC
.ENDM
.MACRO .READC	AREA,CHAN,BUF,WCNT,CRTN,BLK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CRTN>
...CM0	<WCNT>
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<200+AREA>
.IFF
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,8.,<CODE>
.ENDC
.ENDM
;.;
;.MACRO .READW	AREA,CHAN,BUF,WCNT,BLK,CRTN==#0,CODE
.MACRO .READW	AREA,CHAN,BUF,WCNT,BLK,CRTN,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<WCNT>
...CM0
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<200+AREA>
.IFF
;...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,8.,<CODE>
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,#0,8.,<CODE>
.ENDC
.ENDM
.MACRO .REGDEF
.ENDM
.MACRO .RELEA	DNAM
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM5	<DNAM>
...CM0
	EMT	343
.ENDM
.MACRO .RENAM	AREA,CHAN,DBLK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
	EMT	<100+AREA>
.IFF
...CM1	<AREA>,4.,<CHAN>,<CODE>
...CM2	<DBLK>,2.,X
.ENDC
.ENDM
.MACRO .REOPE	AREA,CHAN,CBLK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
	EMT	<140+AREA>
.IFF
...CM1	<AREA>,6.,<CHAN>,<CODE>
...CM2	<CBLK>,2.,X
.ENDC
.ENDM
.MACRO .SAVES	AREA,CHAN,CBLK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CHAN>
	EMT	<120+AREA>
.IFF
...CM1	<AREA>,5.,<CHAN>,<CODE>
...CM2	<CBLK>,2.,X
.ENDC
.ENDM
.MACRO .RSUM
	MOV	#2.*400,%0
	EMT	374
.ENDM
;.;
.MACRO .SDAT	AREA,BUF,WCNT,CRTN==#1,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.ENDM
.MACRO .SDATC	AREA,BUF,WCNT,CRTN,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.ENDM
;.;
.MACRO .SDATW	AREA,BUF,WCNT,CRTN==#0,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IIF IDN <CODE>,NOSET, ...CM4 <AREA>,,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.IIF DIF <CODE>,NOSET, ...CM4 <AREA>,#0,<BUF>,<WCNT>,,<CRTN>,21.,<CODE>
.ENDM
.MACRO .SDTTM	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,32.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .SERR
	MOV	#4.*400,%0
	EMT	374
.ENDM
.MACRO .SETTO	ADDR
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM5	<ADDR>
	EMT	354
.ENDM
.MACRO .SCCA	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,29.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .SFPA	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,24.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .SPCPS	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,33.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .SPFUN	AREA,CHAN,FUNC,BUF,WCNT,BLK,CRTN,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM1	<AREA>,26.,<CHAN>,<CODE>
...CM2	<BLK>,2.
...CM2	<BUF>,4.
...CM2	<WCNT>,6.
.IF NB FUNC
.NTYPE ...V2,FUNC
.IF NE ...V2-27
.IIF DIF <CODE>,NOSET,...CM2	#377,8.,,,B
...CM2	<FUNC>,9.,,,B
.IFF
...CM2	<FUNC'*400+377>,8.
.ENDC
.ENDC
...CM2	<CRTN>,10.,X,X
.ENDM
.MACRO .SRESE
	EMT	352
.ENDM
.MACRO .SPND
	MOV	#1*400,%0
	EMT	374
.ENDM
.MACRO .SYNCH	AREA,PIC
.IF B PIC
.IIF NB <AREA>	MOV	AREA,%4
.IFF
.IF NB AREA
	MOV	%7,%4
	ADD	#AREA-.,%4
.ENDC
.ENDC
	MOV	@#54,%5
	JSR	5.,@324(5.)
.ENDM
.MACRO .TIMIO	TBK,HI,LO
	JSR	%5,@$TIMIT
	.WORD	TBK-.
	.WORD	0
	.WORD	HI
	.WORD	LO
.ENDM
.MACRO .TLOCK
	MOV	#7.*400,%0
	EMT	374
.ENDM
.MACRO .TRPSE	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,3.,0,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .TTINR
	EMT	340
.ENDM
.MACRO .TTYIN	CHAR
	EMT	340
	BCS	.-2.
.IF NB <CHAR>
.IF DIF <CHAR>,R0
	MOVB	%0,CHAR
.ENDC
.ENDC
.ENDM
.MACRO .TTOUT
	EMT	341
.ENDM
.MACRO .TTYOU	CHAR
.IF NB <CHAR>
.IF DIF <CHAR>,R0
	MOVB	CHAR,%0
.ENDC
.ENDC
	EMT	341
	BCS	.-2.
.ENDM
.MACRO .TWAIT	AREA,TIME,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,20.,0,<CODE>
...CM2	<TIME>,2.,X
.ENDM
.MACRO .UNLOC
	EMT	347
.ENDM
.MACRO .UNMAP	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,30.,5.,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .UNPRO	AREA,ADDR,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
...CM6	<AREA>,25.,1,<CODE>
...CM2	<ADDR>,2.,X
.ENDM
.MACRO .WAIT	CHAN
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
	EMT	<240+CHAN>
.IFF
.IF B <CHAN>
	CLR	%0
.IFF
.NTYPE ...V2,CHAN
.IF EQ ...V2-27
.IF IDN <CHAN>,#0
	CLR	%0
.IFF
	MOV	CHAN,%0
.ENDC
.IFF
	CLR	%0
	BISB	CHAN,%0
.ENDC
.ENDC
	EMT	374
.ENDC
.ENDM
.MACRO .WDBBK	WNAPR,WNSIZ,WNRID,WNOFF,WNLEN,WNSTS
.MCALL	.WDBDF
.WDBDF
	.BYTE
	.BYTE	WNAPR
	.WORD
	.WORD	WNSIZ
	.WORD	WNRID
	.WORD	WNOFF
	.WORD	WNLEN
	.WORD	WNSTS
.ENDM
.MACRO .WDBDF
W.NID	==0
W.NAPR	==1
W.NBAS	==2.
W.NSIZ	==4.
W.NRID	==6.
W.NOFF	==10
W.NLEN	==12
W.NSTS	==14
W.NLGH	==16
WS.CRW	==100000
WS.UNM	==40000
WS.ELW	==20000
WS.MAP	==400
.ENDM
.MACRO .WRITC	AREA,CHAN,BUF,WCNT,CRTN,BLK,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<CRTN>
...CM0	<WCNT>
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<220+AREA>
.IFF
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,9.,<CODE>
.ENDC
.ENDM
;.;
.MACRO .WRITE	AREA,CHAN,BUF,WCNT,BLK,CRTN==#1,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<WCNT>
...CM0	#1
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<220+AREA>
.IFF
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,9.,<CODE>
.ENDC
.ENDM
;.;
;.MACRO .WRITW	AREA,CHAN,BUF,WCNT,BLK,CRTN==#0,CODE
.MACRO .WRITW	AREA,CHAN,BUF,WCNT,BLK,CRTN,CODE
.IF NDF ...V1
.MCALL .MACS
.MACS
.ENDC
.IF EQ ...V1-1
...CM5	<WCNT>
...CM0
...CM0	<BUF>
...CM0	<CHAN>
	EMT	<220+AREA>
.IFF
;...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<CRTN>,9.,<CODE>
...CM4 <AREA>,<CHAN>,<BUF>,<WCNT>,<BLK>,<#0>,9.,<CODE>
.ENDC
.ENDM
	.sbttl Other Macros to Support RT-11


; The save macro creates part of the list of things to be restored
; upon return to RT-11

.macro	save a1,a2,a3,a4,a5,a6,a7,a8,a9
	.irp foo,<<a1>,<a2>,<a3>,<a4>,<a5>,<a6>,<a7>,<a8>,<a9>>

	.if nb foo
	     expand foo
	.endc
	.endr

.endm

; Issue the appropriate .device call to RT-11 for the list of SAVEs

.macro savlst
.if eq asmsj			;if NOT under SJ monitor
.if eq rt11vn-3
	.device #xgemtbl,#xgsavl,l
.iff
	.device #xgemtbl,#xgsavl
.endc
.endc
.endm

.macro reslst
.if ne asmsj			; if under SJ monitor, we need to do all
				; the work by hand 
	push r0
	mov #xgsavl+2,r0	; presume the linking kind; to hell with V2
loop <	  tst (r0)		; list done?
	  exitl eq		; yes.
	  mov 2(r0),@0(r0)	; restore the value
	  add #4,r0
	  rptl
	  >
	pop r0
.endc
.endm

;expand is a utility macro for SAVE

.macro	expand a
	xgflg === 0

	.irp foo,<a>
	     .if eq xgflg
		xgflg===1
		xgval === foo
	     .iff
		xgcnt === <foo-xgval>/2
	     .endc
	.endr

	.if1
	     .if ndf xgtotal
		xgtotal === 0
	     .endc

	     xgtotal === xgtotal+xgcnt
	.endc

	.rept xgcnt
	     .if1
		mov @#0,0	;leave room for pass two
	     .endc
	     .if2
		xgtmp===.
		.==xgpntr
		.word xgval+<2*.rpcnt>,0,0
		.==xgtmp
		mov @#xgval+<2*.rpcnt>,xgpntr+2
		xgpntr === xgpntr + 4
	     .endc
	.endr
.endm

.macro putlst
xgemtbl===.
	.word 0,0
xgsavl===.
.if eq rt11vn-3
	.word 0
.endc
xgpntr===.
.==4*xgtotal+.+2			;allow for 0 word ending list
.endm

